name: Continuous Deployment (CD)

on:
  workflow_run:
    workflows: ["Continuous Integration"]
    # Execute the workflow once the CI workflow is completed on main branch.
    types: [completed]
    branches:
      - main
      
env:
  AWS_REGION: eu-west-3 
  AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

jobs:
  deploy:
    # Defines the type of runner the job runs on
    runs-on: ubuntu-latest

    steps:
      - name: Checkout to the repository
        uses: actions/checkout@v2

      - name: Set up NodeJS environment
        uses: actions/setup-node@v2
        with:
          # Reads the node version from the .nvmrc file itself
          node-version: 19

      # Consider this as an add on to optimize the execution of actions
      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
            
      - name: Install package dependencies
        run: npm install

      - name: Buildong project
        run: REACT_APP_API_URL='${{ secrets.ACTIONS_DEPLOYMENT_TOKEN }}' npm run build
 
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
          
      - name: Deploy to S3 bucket
        run: aws s3 sync ./build/ s3://${{ env.AWS_S3_BUCKET }} --delete
